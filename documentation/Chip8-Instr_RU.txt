00E0	CLS	    Очистить экран
00EE	RET	    Возвратиться из подпрограммы
/*0NNN	SYS     NNN	Перейти на машинный код RCA 1802 по адресу nnn. Эта инструкция была только в самой первой реализации CHIP-8. В более поздних реализациях и эмуляторах не используется.*/
00BN	SCU N	Прокрутить изображение на экране на n строк вверх (на N/2 строк в LOW mode)
00CN	SCD N	Прокрутить изображение на экране на n строк вниз (на N/2 строк в LOW mode)
00FB	SCR	    Прокрутить изображение на экране на 4 пикселя вправо в режиме 128x64, либо на 2 пикселя в режиме 64x32
00FC	SCL	    Прокрутить изображение на экране на 4 пикселя влево в режиме 128x64, либо на 2 пикселя в режиме 64x32
00FD	EXIT	Завершить программу
00FE	LOW	    Установить низкое разрешение (64x32) mode; это стандартное разрешение
00FF	HIGH	Установить высокое разрешение (128x64) mode

1NNN	JP NNN	    Перейти по адресу NNN
2NNN	CALL NNN	Вызов подпрограммы по адресу NNN
3XNN	SE VX, NN	Пропустить следующую инструкцию, если регистр Vx = NN
4XNN	SNE VX, NN	Пропустить следующую инструкцию, если регистр Vx != NN
5XY0	SE VX, VY	Пропустить следующую инструкцию, если регистр Vx == Vy
5XY1	SGT VX, VY	Пропустить следующую инструкцию, если регистр Vx > Vy
5XY2	SLT VX, VY	Пропустить следующую инструкцию, если регистр Vx < Vy
6XNN	LD VX, NN	VX = NN
7XNN	ADD VX, NN	VX = VX + NN

8XY0	LD VX, VY	VX = VY
8XY1	OR VX, VY	VX = VX OR VY
8XY2	AND VX, VY	VX = VX AND VY
8XY3	XOR VX, VY	VX = VX XOR VY
8XY4	ADD VX, VY	VX = VX + VY; Если результат больше, чем 8 бит (т.е.> 255) VF устанавливается в 1, иначе 0
8XY5	SUB VX, VY	VX = VX - VY; Если Vx >= Vy, то VF устанавливается в 1, иначе 0.
8XY6	SHR VX	    VX = VX » 1 если младший бит (самый правый) регистра Vx равен 1, то VF = 1, иначе VF = 0
8XY7	SUBN VX, VY	VX = VY - VX; Если Vy >= Vx, то VF устанавливается в 1, иначе 0.
8XYE	SHL VX	    VX = VX « 1 если старший бит (самый левый) регистра Vx равен 1, то VF = 1, иначе VF = 0

9XY0	SNE VX, VY 	Пропустить следующую инструкцию, если Vx != Vy
ANNN	LD I, NNN	I = NNN
BNNN	JP V0, NNN	Перейти по адресу nnn + значение в регистре V0.
CXNN	RND VX, NN	Устанавливается Vx = (случайное число от 0 до 255) && NN

DXYN	DRW VX, VY, N	Рисует 8xN спрайт по адресу I начиная с позиции (VX, VY); VF = 1 если была коллизия, иначе 0
DXY0	DRW VX, VY, 0	Рисует 16x16 спрайт по адресу I начиная с позиции (VX, VY) (8x16 в LOW mode); VF = 1 если была коллизия, иначе 0

EX9E	SKP VX	Пропустить следующую команду если клавиша, номер которой хранится в регистре Vx, нажата
EXA1	SKNP VX	ропустить следующую команду если клавиша, номер которой хранится в регистре Vx, не нажата

FX07	LD VX, DT	VX = DT Скопировать значение таймера задержки в регистр Vx
FX0A	LD VX, K	Ждать нажатия любой клавиши. Как только клавиша будет нажата записать ее номер в регистр Vx и перейти к выполнению следующей инструкции.
FX15	LD DT, VX	DT = VX Установить значение таймера задержки равным значению регистра Vx
FX18	LD ST, VX	ST = VX Установить значение звукового таймера равным значению регистра Vx
FX1E	ADD I, VX	I = I + VX; Сложить значения регистров I и Vx, результат сохранить в I. Т.е. I = I + Vx; если I > 0xFFF, то VF = 1, иначе Vf = 0
FX29	LD F, VX	Команда загружает в регистр I адрес спрайта, значение которого находится в Vx. Используется для вывода на экран символов встроенного шрифта размером 4x5 
FX33	LD B, VX	Сохранить значение регистра Vx в двоично-десятичном (BCD) представлении по адресам I, I+1 и I+2
FX55	LD [I], VX	Сохранить значения регистров от V0 до Vx в памяти, начиная с адреса находящегося в I
FX65	LD VX, [I]	Загрузить значения регистров от V0 до Vx из памяти, начиная с адреса находящегося в I
FX30	LD HF, VX	Команда загружает в регистр I адрес спрайта, значение которого находится в Vx. Используется для вывода на экран символов встроенного шрифта размером 8x10
FX75	LD R, VX	Сохранить регистры V0 - Vx в пользовательских флагах [RPL]
FX85	LD VX, R	Загрузить регистры V0 - Vx из пользовательских флагов [RPL]